npm install sequelize-cli
npx sequelize --help

Sequelize CLI [Node: 10.21.0, CLI: 6.0.0, ORM: 6.1.0]

sequelize <command>

Commands:
  sequelize db:migrate                        Run pending migrations
  sequelize db:migrate:schema:timestamps:add  Update migration table to have timestamps
  sequelize db:migrate:status                 List the status of all migrations
  sequelize db:migrate:undo                   Reverts a migration
  sequelize db:migrate:undo:all               Revert all migrations ran
  sequelize db:seed                           Run specified seeder
  sequelize db:seed:undo                      Deletes data from the database
  sequelize db:seed:all                       Run every seeder
  sequelize db:seed:undo:all                  Deletes data from the database
  sequelize db:create                         Create database specified by configuration
  sequelize db:drop                           Drop database specified by configuration
  sequelize init                              Initializes project
  sequelize init:config                       Initializes configuration
  sequelize init:migrations                   Initializes migrations
  sequelize init:models                       Initializes models
  sequelize init:seeders                      Initializes seeders
  sequelize migration:generate                Generates a new migration file      [aliases: migration:create]
  sequelize model:generate                    Generates a model and its migration [aliases: model:create]
  sequelize seed:generate                     Generates a new seed file           [aliases: seed:create]

Options:
  --version  Show version number                                                  [boolean]
  --help     Show help                                                            [boolean]

after npx sequelize init

folder created
Sequelize CLI [Node: 20.10.0, CLI: 6.6.2, ORM: 6.37.1]

Created "config\config.json"
Successfully created models folder 
Successfully created migrations folder  
Successfully created seeders folder 

here instead of sequelize init we can use 4 separate commands to create separate folders

  npx sequelize init:config                       
                     Initializes configuration  db connection details

  npx sequelize init:migrations                   
                     Initializes migrations  stores table structure or schemas


  npx sequelize init:models    
                     Initializes models  without db for crud operations

  npx sequelize init:seeders                      
                     Initializes seeders  stores some or fake dummy data required for table

Models: Models define the structure of your data in JavaScript. They typically correspond to database tables. When you define a model, you specify the fields (columns) and their data types. Models also define the relationships between different tables (associations).

Migrations: Migrations are used to manage changes to your database schema over time. Each migration file represents a set of changes that need to be applied to the database schema to bring it to a new state. Migrations help you keep track of changes and apply them in a consistent and reproducible manner across different environments.

for database creation and to drop

  npx sequelize db:create                         
  npx sequelize db:drop                      

for model options
   npx sequelize model:generate --help

to create new model
npx sequelize model:generate --name Product --attributes name:string,description:string,amount:integer

then New model was created ,New migration was created 

AFTER SOME changes I.E. ADDING NEW COLUMN ETC 
THEN WRITE npx sequelize db:migrate 

npx sequelize model:generate --name Category --attributes name:string,categoryImage:string,status:integer

npx sequelize db:migrate:undo:all to drop all dbs

to get again we have npx sequelize db:migrate

to undo only current db we have 
npx sequelize db:migrate:undo

to check status
 npx sequelize db:migrate:status

Sequelize CLI [Node: 20.10.0, CLI: 6.6.2, ORM: 6.37.1]

Loaded configuration file "config\config.json".
Using environment "development".
up 20240305051943-create-product.js
down 20240305060053-create-category.js

here up means db is there and down means db is dropped

npx  sequelize seed:generate --help
to create a new seeder file 
npx  sequelize seed:generate --name test-Products

npx sequelize db:seed:all to save all changes
npx sequelize db:seed:undo:all  to delete data from database

npx sequelize db:seed --seed 20240305071845-test-Categories.js

PM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.

pm2 list 
pm2 start app.js
pm2 stop app.js 

advanced version of nodemon we can say
